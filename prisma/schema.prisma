// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  name       String
  email      String     @unique
  password   String
  role       Role       @default(user)
  profileImg String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  reviews    Review[]
  orders     Order[]
  feedbacks  Feedback[]

  @@map("users")
}

model Plan {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  price       Float
  isAvailable Boolean  @default(true)
  speed       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reviews     Review[]
  orders      Order[]

  @@map("plans")
}

model Review {
  id        String   @id @default(uuid())
  comment   String
  rating    Float
  plan      Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  planId    String
  userId    String

  @@map("reviews")
}

model Order {
  id        String   @id @default(uuid())
  plan      Plan     @relation(fields: [planId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  status    Status   @default(pending)
  orderDate DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  planId    String
  userId    String

  @@map("orders")
}

model Feedback {
  id        String   @id @default(uuid())
  subject   String
  comment   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("feedbacks")
}

enum Role {
  user
  admin
  super_admin
}

enum Status {
  pending
  calcelled
  delivered
}
