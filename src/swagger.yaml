openapi: 3.0.0
info:
  title: QuickNet (Not Complete)
  description: The QuickNet ISP Provider website will serve as the online platform for customers to explore, select, and manage internet service plans and related services. The website will include features for user registration, plan selection, order processing, account management, etc.
  version: 1.0.0

servers:
  - url: http://localhost:5000/api/v1

paths:
  /auth/register:
    post:
      summary: Register User
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Rakib Ahmed
                email:
                  type: string
                  example: rakibahmed@gmail.com
                password:
                  type: string
                  example: 123456
                profileImg:
                  type: string
                  example: profile.jpg
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: User created successfully
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '409':
          description: User already exists with the email
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: User already exists with the email
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: User already exists with the email
                  stack:
                    nullable: true
                    example: null
        '500':
          description: User already exists with the email
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Validation Error
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: name
                        message:
                          type: string
                          example: Name image is required
                  stack:
                    nullable: true
                    example: null
  /auth/login:
    post:
      summary: Login User
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: rakibahmed@gmail.com
                password:
                  type: string
                  example: 123456
      responses:
        '200':
          description: User signed in successfully
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User signed in successfully
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoic3VwZXJfYWRtaW4iLCJpZCI6ImFiZGMyMjk4LTkyMTAtNDAxMy05MWVmLTRlZTJhMzVhYjA1MCIsIm5hbWUiOiJSYWtpYiIsInByb2ZpbGVJbWciOiJodHRwczovL2ZpbGVzLmVkZ2VzdG9yZS5kZXYveWx0YjZ3OHQ2c28zaTJlaS9wdWJsaWNGaWxlcy9fcHVibGljL2NjMmQyMmVkLTU1OTEtNGFhNS1iMmYxLTY0OTQ4YzgxYjI1My5wbmciLCJpYXQiOjE2OTg5MzI3MDAsImV4cCI6MTczMDQ2ODcwMH0.tjX-SUcoNMKwZt8pVOJM297ymIKD_qqO-ofVL3CFE3U
        '401':
          description: Incorrect password
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Incorrect password
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: Incorrect password
                  stack:
                    nullable: true
                    example: null
        '403':
          description: Your account has been banned
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    type: string
                    example: Your account has been banned
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: Your account has been banned
                  stack:
                    nullable: true
                    example: null
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: User not found
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: User not found
                  stack:
                    nullable: true
                    example: null
        '500':
          description: Validation Error
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: Validation Error
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: password
                        message:
                          type: string
                          example: Password is required
                  stack:
                    nullable: true
                    example: null
  /profile:
    get:
      summary: Profile Information
      tags: [Profile]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile information retrieved successfully
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User profile information retrieved successfully
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized Access
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Unauthorized Access
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: Unauthorized Access
                  stack:
                    nullable: true
                    example: null
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: User not found
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: User not found
                  stack:
                    nullable: true
                    example: null
  /users:
    get:
      summary: Get All Users
      tags: [User]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Users retrieved successfully
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized Access
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Unauthorized Access
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: Unauthorized Access
                  stack:
                    nullable: true
                    example: null
        '403':
          description: Forbidden Access
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 403
                  message:
                    type: string
                    example: Forbidden Access
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: Forbidden Access
                  stack:
                    nullable: true
                    example: null
  /users/{id}:
    get:
      summary: Get single user by id
      tags: [User]
      parameters:
        - $ref: '#/components/parameters/Id'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: User retrieved successfully
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized Access
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Unauthorized Access
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: Unauthorized Access
                  stack:
                    nullable: true
                    example: null
        '404':
          description: User not found
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: User not found
                  success:
                    type: boolean
                    example: false
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          example: ''
                        message:
                          type: string
                          example: User not found
                  stack:
                    nullable: true
                    example: null

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: fa1d029d-3aab-4be5-af0c-de58c9d4407b
        name:
          type: string
          example: Rakib Ahmed
        email:
          type: string
          example: rakibahmed@gmail.com
        password:
          type: string
          example: 123456
        profileImg:
          type: string
          example: profile.jpg
        isBanned:
          type: boolean
          example: false
        role:
          type: string
          enum: [user, admin, super_admin]
          example: user
        createdAt:
          type: string
          example: 2023-11-02T08:02:04.234Z
        updatedAt:
          type: string
          example: 2023-11-02T08:02:04.234Z
    Id:
      type: object
      properties:
        id:
          type: string
          example: fa1d029d-3aab-4be5-af0c-de58c9d4407b
    At:
      type: object
      properties:
        createdAt:
          type: string
          example: 2023-11-02T08:02:04.234Z
        updatedAt:
          type: string
          example: 2023-11-02T08:02:04.234Z
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    '401':
      description: Unauthorized Access
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                example: 401
              message:
                type: string
                example: Unauthorized Access
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      example: ''
                    message:
                      type: string
                      example: Unauthorized Access
              stack:
                nullable: true
                example: null
    '403':
      description: Forbidden Access
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                example: 401
              message:
                type: string
                example: Forbidden Access
              success:
                type: boolean
                example: false
              errors:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      example: ''
                    message:
                      type: string
                      example: Forbidden Access
              stack:
                nullable: true
                example: null
  parameters:
    Id:
      in: path
      name: id
      required: true
      schema:
        type: string
        example: fa1d029d-3aab-4be5-af0c-de58c9d4407b
